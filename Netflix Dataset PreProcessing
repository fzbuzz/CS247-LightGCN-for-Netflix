{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Netflix Dataset PreProcessing","provenance":[],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"WwGuxeTDuoWX","executionInfo":{"status":"ok","timestamp":1646690869887,"user_tz":480,"elapsed":770,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import math\n","import re\n","from scipy.sparse import csr_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","sns.set_style(\"darkgrid\")\n","import os\n","import sys"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wRCgZ8GT_WJE","executionInfo":{"status":"ok","timestamp":1646690894103,"user_tz":480,"elapsed":22176,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"6fd7269a-620f-40fc-c246-1345f6704ecd"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["PATH = \"drive/Shareddrives/CS247\""],"metadata":{"id":"ZXPTleyK_dsU","executionInfo":{"status":"ok","timestamp":1646690910700,"user_tz":480,"elapsed":6,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["%cd $PATH\n","!ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AvfUUKYV_k7S","executionInfo":{"status":"ok","timestamp":1646690913043,"user_tz":480,"elapsed":1119,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"1121c070-77be-48a9-c9b2-95d046a14750"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/Shareddrives/CS247\n"," dataloaderNetflix.py\t\t  netflix-prize-data   train_tr_10k.csv\n"," item_popularity.csv\t\t  README\t       train_tr_4k.csv\n"," LightGCN-PyTorch-master\t  train_te_10k.csv     train_tr.csv\n"," netflix_archive.zip\t\t  train_te_4k.csv      unique_sid.txt\n","'Netflix Dataset PreProcessing'   train_te.csv\t       user_activity.csv\n"]}]},{"cell_type":"code","source":["# !unzip netflix_archive.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vbPst91J_m47","executionInfo":{"status":"ok","timestamp":1646432161890,"user_tz":480,"elapsed":38703,"user":{"displayName":"FELIX ZHANG","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiDtsNWdjWBxlmRNJ4uBwPO-E_j_pBYsW6y2Zuviw=s64","userId":"09868867147788532503"}},"outputId":"d464841c-e8dc-4045-c3ee-ede1a9e294a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  netflix_archive.zip\n","  inflating: README                  \n","  inflating: combined_data_1.txt     \n","  inflating: combined_data_2.txt     \n","  inflating: combined_data_3.txt     \n","  inflating: combined_data_4.txt     \n","  inflating: movie_titles.csv        \n","  inflating: probe.txt               \n","  inflating: qualifying.txt          \n"]}]},{"cell_type":"code","source":["DATA_DIR = \"./netflix-prize-data\""],"metadata":{"id":"XyyCTW4Kuvqn","executionInfo":{"status":"ok","timestamp":1646690918105,"user_tz":480,"elapsed":309,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Skip date\n","df1 = pd.read_csv(os.path.join(DATA_DIR, 'combined_data_1.txt'), header = None, names = ['Cust_Id', 'Rating'], usecols = [0,1])\n","\n","df1['Rating'] = df1['Rating'].astype(float)\n","\n","print('Dataset 1 shape: {}'.format(df1.shape))\n","print('-Dataset examples-')\n","print(df1.iloc[::5000000, :])"],"metadata":{"id":"wHXVKV8duvtf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2 = pd.read_csv(os.path.join(DATA_DIR, 'combined_data_2.txt'), header = None, names = ['Cust_Id', 'Rating'], usecols = [0,1])\n","df3 = pd.read_csv(os.path.join(DATA_DIR, 'combined_data_3.txt'), header = None, names = ['Cust_Id', 'Rating'], usecols = [0,1])\n","df4 = pd.read_csv(os.path.join(DATA_DIR, 'combined_data_4.txt'), header = None, names = ['Cust_Id', 'Rating'], usecols = [0,1])\n","\n","\n","df2['Rating'] = df2['Rating'].astype(float)\n","df3['Rating'] = df3['Rating'].astype(float)\n","df4['Rating'] = df4['Rating'].astype(float)\n","\n","print('Dataset 2 shape: {}'.format(df2.shape))\n","print('Dataset 3 shape: {}'.format(df3.shape))\n","print('Dataset 4 shape: {}'.format(df4.shape))"],"metadata":{"id":"02qRNAbEuvwF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646624497088,"user_tz":480,"elapsed":37469,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"b926ed01-d700-42f1-ee88-b0d76febc3d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset 2 shape: (26982302, 2)\n","Dataset 3 shape: (22605786, 2)\n","Dataset 4 shape: (26851926, 2)\n"]}]},{"cell_type":"code","source":["# load less data for speed\n","\n","df = df1\n","#df = df1.append(df2)\n","#df = df.append(df3)\n","#df = df.append(df4)\n","\n","df.index = np.arange(0,len(df))\n","print('Full dataset shape: {}'.format(df.shape))\n","print('-Dataset examples-')\n","print(df.iloc[::5000000, :])"],"metadata":{"id":"-4dcsll0uvyg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646624499482,"user_tz":480,"elapsed":234,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"96a55e62-9bfd-496e-c45b-2807f5fd1b7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Full dataset shape: (24058263, 2)\n","-Dataset examples-\n","          Cust_Id  Rating\n","0              1:     NaN\n","5000000   2560324     4.0\n","10000000  2271935     2.0\n","15000000  1921803     2.0\n","20000000  1933327     3.0\n"]}]},{"cell_type":"code","source":["p = df.groupby('Rating')['Rating'].agg(['count'])\n","\n","# get movie count\n","movie_count = df.isnull().sum()[1]\n","\n","# get customer count\n","cust_count = df['Cust_Id'].nunique() - movie_count\n","\n","# get rating count\n","rating_count = df['Cust_Id'].count() - movie_count\n","\n","ax = p.plot(kind = 'barh', legend = False, figsize = (15,10))\n","plt.title('Total pool: {:,} Movies, {:,} customers, {:,} ratings given'.format(movie_count, cust_count, rating_count), fontsize=20)\n","plt.axis('off')\n","\n","for i in range(1,6):\n","    ax.text(p.iloc[i-1][0]/4, i-1, 'Rating {}: {:.0f}%'.format(i, p.iloc[i-1][0]*100 / p.sum()[0]), color = 'white', weight = 'bold')"],"metadata":{"id":"D26SE4Izuv0h","colab":{"base_uri":"https://localhost:8080/","height":596},"executionInfo":{"status":"ok","timestamp":1646624509559,"user_tz":480,"elapsed":8333,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"0229990b-f305-494d-84f6-b2b50154dac5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x720 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_nan = pd.DataFrame(pd.isnull(df.Rating))\n","df_nan = df_nan[df_nan['Rating'] == True]\n","df_nan = df_nan.reset_index()\n","\n","movie_np = []\n","movie_id = 1\n","\n","for i,j in zip(df_nan['index'][1:],df_nan['index'][:-1]):\n","    # numpy approach\n","    temp = np.full((1,i-j-1), movie_id)\n","    movie_np = np.append(movie_np, temp)\n","    movie_id += 1\n","\n","# Account for last record and corresponding length\n","# numpy approach\n","last_record = np.full((1,len(df) - df_nan.iloc[-1, 0] - 1),movie_id)\n","movie_np = np.append(movie_np, last_record)\n","\n","print('Movie numpy: {}'.format(movie_np))\n","print('Length: {}'.format(len(movie_np)))"],"metadata":{"id":"qJphFMj9u33n","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646624550697,"user_tz":480,"elapsed":38842,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"95e9a932-8dc7-467e-e6d9-784892be6a14"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Movie numpy: [1.000e+00 1.000e+00 1.000e+00 ... 4.499e+03 4.499e+03 4.499e+03]\n","Length: 24053764\n"]}]},{"cell_type":"code","source":["list(zip(df_nan['index'][1:],df_nan['index'][:-1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"POouU8WXPoZx","executionInfo":{"status":"ok","timestamp":1646624555272,"user_tz":480,"elapsed":251,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"d4206d4e-2785-4684-b7c4-22510b380201"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(548, 0),\n"," (694, 548),\n"," (2707, 694),\n"," (2850, 2707),\n"," (3991, 2850),\n"," (5011, 3991),\n"," (5105, 5011),\n"," (20016, 5105),\n"," (20112, 20016),\n"," (20362, 20112),\n"," (20561, 20362),\n"," (21108, 20561),\n"," (21234, 21108),\n"," (21353, 21234),\n"," (21644, 21353),\n"," (24344, 21644),\n"," (31453, 24344),\n"," (42176, 31453),\n"," (42716, 42176),\n"," (42833, 42716),\n"," (43052, 42833),\n"," (43256, 43052),\n"," (43872, 43256),\n"," (45206, 43872),\n"," (46414, 45206),\n"," (52276, 46414),\n"," (52550, 52276),\n"," (92303, 52550),\n"," (92827, 92303),\n"," (211241, 92827),\n"," (211463, 211241),\n"," (213318, 211463),\n"," (220209, 213318),\n"," (220318, 220209),\n"," (221158, 220318),\n"," (222098, 221158),\n"," (222380, 222098),\n"," (223183, 222380),\n"," (223936, 223183),\n"," (224428, 223936),\n"," (224522, 224428),\n"," (224651, 224522),\n"," (224757, 224651),\n"," (233259, 224757),\n"," (235879, 233259),\n"," (242438, 235879),\n"," (244789, 242438),\n"," (248381, 244789),\n"," (248613, 248381),\n"," (248942, 248613),\n"," (249033, 248942),\n"," (254181, 249033),\n"," (254296, 254181),\n"," (254456, 254296),\n"," (256863, 254456),\n"," (258697, 256863),\n"," (262260, 258697),\n"," (279666, 262260),\n"," (279871, 279666),\n"," (280167, 279871),\n"," (280315, 280167),\n"," (280606, 280315),\n"," (280791, 280606),\n"," (280887, 280791),\n"," (281146, 280887),\n"," (281313, 281146),\n"," (281603, 281313),\n"," (283820, 281603),\n"," (283937, 283820),\n"," (284281, 283937),\n"," (285843, 284281),\n"," (286023, 285843),\n"," (286771, 286023),\n"," (287160, 286771),\n"," (287380, 287160),\n"," (290335, 287380),\n"," (303934, 290335),\n"," (308785, 303934),\n"," (312183, 308785),\n"," (312458, 312183),\n"," (313708, 312458),\n"," (313828, 313708),\n"," (332553, 313828),\n"," (335306, 332553),\n"," (335573, 335306),\n"," (335750, 335573),\n"," (335868, 335750),\n"," (336847, 335868),\n"," (337726, 336847),\n"," (338352, 337726),\n"," (338920, 338352),\n"," (339082, 338920),\n"," (339257, 339082),\n"," (339600, 339257),\n"," (340536, 339600),\n"," (341025, 340536),\n"," (352534, 341025),\n"," (352665, 352534),\n"," (352792, 352665),\n"," (352871, 352792),\n"," (353202, 352871),\n"," (353533, 353202),\n"," (353743, 353533),\n"," (357244, 353743),\n"," (357437, 357244),\n"," (358378, 357437),\n"," (359208, 358378),\n"," (378227, 359208),\n"," (378773, 378227),\n"," (380933, 378773),\n"," (411061, 380933),\n"," (411301, 411061),\n"," (412695, 411301),\n"," (413124, 412695),\n"," (413791, 413124),\n"," (414918, 413791),\n"," (415900, 414918),\n"," (435141, 415900),\n"," (435238, 435141),\n"," (435578, 435238),\n"," (435678, 435578),\n"," (439061, 435678),\n"," (439338, 439061),\n"," (439508, 439338),\n"," (441238, 439508),\n"," (442423, 441238),\n"," (445438, 442423),\n"," (445856, 445438),\n"," (446613, 445856),\n"," (446700, 446613),\n"," (447406, 446700),\n"," (448237, 447406),\n"," (450801, 448237),\n"," (450901, 450801),\n"," (451286, 450901),\n"," (451407, 451286),\n"," (451612, 451407),\n"," (457620, 451612),\n"," (457717, 457620),\n"," (457837, 457717),\n"," (457964, 457837),\n"," (458291, 457964),\n"," (496654, 458291),\n"," (496944, 496654),\n"," (497400, 496944),\n"," (497767, 497400),\n"," (497899, 497767),\n"," (520094, 497899),\n"," (520157, 520094),\n"," (520423, 520157),\n"," (520600, 520423),\n"," (529763, 520600),\n"," (530085, 529763),\n"," (530244, 530085),\n"," (531225, 530244),\n"," (539405, 531225),\n"," (540111, 539405),\n"," (540486, 540111),\n"," (540651, 540486),\n"," (541551, 540651),\n"," (542201, 541551),\n"," (542676, 542201),\n"," (542870, 542676),\n"," (543523, 542870),\n"," (548112, 543523),\n"," (557548, 548112),\n"," (566700, 557548),\n"," (568054, 566700),\n"," (568390, 568054),\n"," (568606, 568390),\n"," (574797, 568606),\n"," (575120, 574797),\n"," (577357, 575120),\n"," (577549, 577357),\n"," (668000, 577549),\n"," (668211, 668000),\n"," (668453, 668211),\n"," (670385, 668453),\n"," (670672, 670385),\n"," (673091, 670672),\n"," (676650, 673091),\n"," (676885, 676650),\n"," (677049, 676885),\n"," (677449, 677049),\n"," (679747, 677449),\n"," (680039, 679747),\n"," (700089, 680039),\n"," (702639, 700089),\n"," (716777, 702639),\n"," (716882, 716777),\n"," (815603, 716882),\n"," (815879, 815603),\n"," (816001, 815879),\n"," (816648, 816001),\n"," (816834, 816648),\n"," (816989, 816834),\n"," (898250, 816989),\n"," (898445, 898250),\n"," (933955, 898445),\n"," (934085, 933955),\n"," (936810, 934085),\n"," (937193, 936810),\n"," (937290, 937193),\n"," (937521, 937290),\n"," (938035, 937521),\n"," (939132, 938035),\n"," (939391, 939132),\n"," (941588, 939391),\n"," (945962, 941588),\n"," (946650, 945962),\n"," (947305, 946650),\n"," (948196, 947305),\n"," (951679, 948196),\n"," (951804, 951679),\n"," (957622, 951804),\n"," (966518, 957622),\n"," (966944, 966518),\n"," (967060, 966944),\n"," (967172, 967060),\n"," (967394, 967172),\n"," (967556, 967394),\n"," (967656, 967556),\n"," (991782, 967656),\n"," (992869, 991782),\n"," (1000265, 992869),\n"," (1000455, 1000265),\n"," (1001786, 1000455),\n"," (1001882, 1001786),\n"," (1002535, 1001882),\n"," (1002662, 1002535),\n"," (1003431, 1002662),\n"," (1008408, 1003431),\n"," (1008827, 1008408),\n"," (1008925, 1008827),\n"," (1009368, 1008925),\n"," (1009494, 1009368),\n"," (1009843, 1009494),\n"," (1012179, 1009843),\n"," (1014370, 1012179),\n"," (1019555, 1014370),\n"," (1062678, 1019555),\n"," (1065054, 1062678),\n"," (1065174, 1065054),\n"," (1065280, 1065174),\n"," (1065372, 1065280),\n"," (1065804, 1065372),\n"," (1066458, 1065804),\n"," (1072620, 1066458),\n"," (1072818, 1072620),\n"," (1073592, 1072818),\n"," (1074797, 1073592),\n"," (1099185, 1074797),\n"," (1104236, 1099185),\n"," (1104427, 1104236),\n"," (1109014, 1104427),\n"," (1121279, 1109014),\n"," (1148637, 1121279),\n"," (1148802, 1148637),\n"," (1149679, 1148802),\n"," (1149885, 1149679),\n"," (1150412, 1149885),\n"," (1154791, 1150412),\n"," (1155692, 1154791),\n"," (1155827, 1155692),\n"," (1156136, 1155827),\n"," (1156263, 1156136),\n"," (1157426, 1156263),\n"," (1162972, 1157426),\n"," (1184440, 1162972),\n"," (1220872, 1184440),\n"," (1221351, 1220872),\n"," (1221414, 1221351),\n"," (1253442, 1221414),\n"," (1254217, 1253442),\n"," (1264821, 1254217),\n"," (1264937, 1264821),\n"," (1265095, 1264937),\n"," (1265179, 1265095),\n"," (1265917, 1265179),\n"," (1266457, 1265917),\n"," (1269675, 1266457),\n"," (1270069, 1269675),\n"," (1276446, 1270069),\n"," (1276544, 1276446),\n"," (1290553, 1276544),\n"," (1290745, 1290553),\n"," (1290996, 1290745),\n"," (1292145, 1290996),\n"," (1296558, 1292145),\n"," (1344210, 1296558),\n"," (1344319, 1344210),\n"," (1344854, 1344319),\n"," (1345263, 1344854),\n"," (1345726, 1345263),\n"," (1374681, 1345726),\n"," (1374798, 1374681),\n"," (1376755, 1374798),\n"," (1377211, 1376755),\n"," (1454156, 1377211),\n"," (1454269, 1454156),\n"," (1454445, 1454269),\n"," (1455325, 1454445),\n"," (1455551, 1455325),\n"," (1458979, 1455551),\n"," (1471800, 1458979),\n"," (1471998, 1471800),\n"," (1472121, 1471998),\n"," (1472322, 1472121),\n"," (1472776, 1472322),\n"," (1473222, 1472776),\n"," (1498058, 1473222),\n"," (1563536, 1498058),\n"," (1663349, 1563536),\n"," (1663864, 1663349),\n"," (1663974, 1663864),\n"," (1666495, 1663974),\n"," (1666590, 1666495),\n"," (1666686, 1666590),\n"," (1666806, 1666686),\n"," (1666931, 1666806),\n"," (1667076, 1666931),\n"," (1667975, 1667076),\n"," (1668688, 1667975),\n"," (1669080, 1668688),\n"," (1670202, 1669080),\n"," (1670368, 1670202),\n"," (1670547, 1670368),\n"," (1670745, 1670547),\n"," (1737012, 1670745),\n"," (1764051, 1737012),\n"," (1811219, 1764051),\n"," (1811369, 1811219),\n"," (1811763, 1811369),\n"," (1851639, 1811763),\n"," (1851789, 1851639),\n"," (1851989, 1851789),\n"," (1854283, 1851989),\n"," (1855686, 1854283),\n"," (1856240, 1855686),\n"," (1856419, 1856240),\n"," (1858282, 1856419),\n"," (1859641, 1858282),\n"," (1859734, 1859641),\n"," (1862339, 1859734),\n"," (1866515, 1862339),\n"," (1867001, 1866515),\n"," (1867110, 1867001),\n"," (1879850, 1867110),\n"," (1880434, 1879850),\n"," (1881586, 1880434),\n"," (1881716, 1881586),\n"," (1881836, 1881716),\n"," (1902297, 1881836),\n"," (1902440, 1902297),\n"," (1902591, 1902440),\n"," (1904462, 1902591),\n"," (1981777, 1904462),\n"," (1984786, 1981777),\n"," (1989367, 1984786),\n"," (1991599, 1989367),\n"," (2027449, 1991599),\n"," (2031386, 2027449),\n"," (2033030, 2031386),\n"," (2033154, 2033030),\n"," (2033415, 2033154),\n"," (2033766, 2033415),\n"," (2046204, 2033766),\n"," (2047600, 2046204),\n"," (2048563, 2047600),\n"," (2049048, 2048563),\n"," (2051053, 2049048),\n"," (2051202, 2051053),\n"," (2051288, 2051202),\n"," (2051532, 2051288),\n"," (2053597, 2051532),\n"," (2053791, 2053597),\n"," (2053904, 2053791),\n"," (2062090, 2053904),\n"," (2062249, 2062090),\n"," (2062779, 2062249),\n"," (2069440, 2062779),\n"," (2069599, 2069440),\n"," (2069823, 2069599),\n"," (2071262, 2069823),\n"," (2080631, 2071262),\n"," (2082101, 2080631),\n"," (2082690, 2082101),\n"," (2082908, 2082690),\n"," (2083300, 2082908),\n"," (2088543, 2083300),\n"," (2089116, 2088543),\n"," (2089177, 2089116),\n"," (2101071, 2089177),\n"," (2102689, 2101071),\n"," (2104512, 2102689),\n"," (2104717, 2104512),\n"," (2105466, 2104717),\n"," (2109032, 2105466),\n"," (2109158, 2109032),\n"," (2112852, 2109158),\n"," (2116099, 2112852),\n"," (2116222, 2116099),\n"," (2116663, 2116222),\n"," (2117122, 2116663),\n"," (2124244, 2117122),\n"," (2172862, 2124244),\n"," (2173082, 2172862),\n"," (2175904, 2173082),\n"," (2176352, 2175904),\n"," (2177362, 2176352),\n"," (2177566, 2177362),\n"," (2177887, 2177566),\n"," (2207797, 2177887),\n"," (2209226, 2207797),\n"," (2209353, 2209226),\n"," (2220610, 2209353),\n"," (2222076, 2220610),\n"," (2224138, 2222076),\n"," (2224740, 2224138),\n"," (2229236, 2224740),\n"," (2230224, 2229236),\n"," (2235723, 2230224),\n"," (2236020, 2235723),\n"," (2250141, 2236020),\n"," (2254674, 2250141),\n"," (2258892, 2254674),\n"," (2261574, 2258892),\n"," (2261690, 2261574),\n"," (2262910, 2261690),\n"," (2264457, 2262910),\n"," (2267907, 2264457),\n"," (2270622, 2267907),\n"," (2280666, 2270622),\n"," (2280805, 2280666),\n"," (2281149, 2280805),\n"," (2284635, 2281149),\n"," (2284801, 2284635),\n"," (2288514, 2284801),\n"," (2289203, 2288514),\n"," (2289311, 2289203),\n"," (2289652, 2289311),\n"," (2314945, 2289652),\n"," (2351461, 2314945),\n"," (2351552, 2351461),\n"," (2359087, 2351552),\n"," (2359807, 2359087),\n"," (2359899, 2359807),\n"," (2360089, 2359899),\n"," (2360180, 2360089),\n"," (2360318, 2360180),\n"," (2361431, 2360318),\n"," (2363862, 2361431),\n"," (2364289, 2363862),\n"," (2366123, 2364289),\n"," (2366908, 2366123),\n"," (2369359, 2366908),\n"," (2486122, 2369359),\n"," (2486478, 2486122),\n"," (2493750, 2486478),\n"," (2494095, 2493750),\n"," (2494640, 2494095),\n"," (2495419, 2494640),\n"," (2497706, 2495419),\n"," (2497789, 2497706),\n"," (2497890, 2497789),\n"," (2498253, 2497890),\n"," (2499309, 2498253),\n"," (2559725, 2499309),\n"," (2559831, 2559725),\n"," (2560411, 2559831),\n"," (2564912, 2560411),\n"," (2565428, 2564912),\n"," (2589031, 2565428),\n"," (2592067, 2589031),\n"," (2593109, 2592067),\n"," (2595137, 2593109),\n"," (2597379, 2595137),\n"," (2597811, 2597379),\n"," (2599584, 2597811),\n"," (2599944, 2599584),\n"," (2600321, 2599944),\n"," (2656826, 2600321),\n"," (2746837, 2656826),\n"," (2747070, 2746837),\n"," (2748397, 2747070),\n"," (2752298, 2748397),\n"," (2752576, 2752298),\n"," (2755824, 2752576),\n"," (2760651, 2755824),\n"," (2761525, 2760651),\n"," (2761814, 2761525),\n"," (2763538, 2761814),\n"," (2763645, 2763538),\n"," (2791247, 2763645),\n"," (2791787, 2791247),\n"," (2792023, 2791787),\n"," (2792599, 2792023),\n"," (2792882, 2792599),\n"," (2798671, 2792882),\n"," (2799204, 2798671),\n"," (2814384, 2799204),\n"," (2815962, 2814384),\n"," (2816214, 2815962),\n"," (2818558, 2816214),\n"," (2820934, 2818558),\n"," (2821092, 2820934),\n"," (2822402, 2821092),\n"," (2822597, 2822402),\n"," (2822784, 2822597),\n"," (2822969, 2822784),\n"," (2824683, 2822969),\n"," (2824981, 2824683),\n"," (2825406, 2824981),\n"," (2826274, 2825406),\n"," (2826407, 2826274),\n"," (2846589, 2826407),\n"," (2853157, 2846589),\n"," (2855426, 2853157),\n"," (2855768, 2855426),\n"," (2855944, 2855768),\n"," (2856077, 2855944),\n"," (2856398, 2856077),\n"," (2856693, 2856398),\n"," (2862830, 2856693),\n"," (2862976, 2862830),\n"," (2863558, 2862976),\n"," (2863830, 2863558),\n"," (2892285, 2863830),\n"," (2892775, 2892285),\n"," (2892932, 2892775),\n"," (2893339, 2892932),\n"," (2894397, 2893339),\n"," (2900313, 2894397),\n"," (2905631, 2900313),\n"," (2911742, 2905631),\n"," (2912159, 2911742),\n"," (2912347, 2912159),\n"," (2912550, 2912347),\n"," (2912779, 2912550),\n"," (2912942, 2912779),\n"," (2913047, 2912942),\n"," (2913219, 2913047),\n"," (2914429, 2913219),\n"," (2914583, 2914429),\n"," (2914922, 2914583),\n"," (2915079, 2914922),\n"," (2915679, 2915079),\n"," (2923419, 2915679),\n"," (2923492, 2923419),\n"," (2957290, 2923492),\n"," (2972113, 2957290),\n"," (2972844, 2972113),\n"," (2973444, 2972844),\n"," (2979335, 2973444),\n"," (2980386, 2979335),\n"," (2981016, 2980386),\n"," (2981190, 2981016),\n"," (2981768, 2981190),\n"," (2981884, 2981768),\n"," (2983591, 2981884),\n"," (2986392, 2983591),\n"," (2986479, 2986392),\n"," (2997326, 2986479),\n"," (3008152, 2997326),\n"," (3008285, 3008152),\n"," (3008937, 3008285),\n"," (3009118, 3008937),\n"," (3009303, 3009118),\n"," (3013654, 3009303),\n"," (3013917, 3013654),\n"," (3168750, 3013917),\n"," (3169311, 3168750),\n"," (3169516, 3169311),\n"," (3169625, 3169516),\n"," (3171748, 3169625),\n"," (3172396, 3171748),\n"," (3174491, 3172396),\n"," (3174726, 3174491),\n"," (3176774, 3174726),\n"," (3185040, 3176774),\n"," (3185125, 3185040),\n"," (3187339, 3185125),\n"," (3187495, 3187339),\n"," (3188504, 3187495),\n"," (3190488, 3188504),\n"," (3192825, 3190488),\n"," (3193354, 3192825),\n"," (3195408, 3193354),\n"," (3196008, 3195408),\n"," (3196186, 3196008),\n"," (3196701, 3196186),\n"," (3196839, 3196701),\n"," (3196932, 3196839),\n"," (3197227, 3196932),\n"," (3198850, 3197227),\n"," (3200012, 3198850),\n"," (3200229, 3200012),\n"," (3200477, 3200229),\n"," (3210224, 3200477),\n"," (3213135, 3210224),\n"," (3213542, 3213135),\n"," (3214735, 3213542),\n"," (3215137, 3214735),\n"," (3215253, 3215137),\n"," (3215492, 3215253),\n"," (3216337, 3215492),\n"," (3316586, 3216337),\n"," (3316655, 3316586),\n"," (3317426, 3316655),\n"," (3317531, 3317426),\n"," (3317678, 3317531),\n"," (3317933, 3317678),\n"," (3318514, 3317933),\n"," (3318657, 3318514),\n"," (3332446, 3318657),\n"," (3332561, 3332446),\n"," (3333357, 3332561),\n"," (3333719, 3333357),\n"," (3333986, 3333719),\n"," (3334657, 3333986),\n"," (3343210, 3334657),\n"," (3343558, 3343210),\n"," (3343798, 3343558),\n"," (3344893, 3343798),\n"," (3345490, 3344893),\n"," (3345788, 3345490),\n"," (3345887, 3345788),\n"," (3346552, 3345887),\n"," (3358369, 3346552),\n"," (3358615, 3358369),\n"," (3366915, 3358615),\n"," (3367644, 3366915),\n"," (3368066, 3367644),\n"," (3369599, 3368066),\n"," (3369741, 3369599),\n"," (3383461, 3369741),\n"," (3384158, 3383461),\n"," (3388324, 3384158),\n"," (3388516, 3388324),\n"," (3388954, 3388516),\n"," (3390154, 3388954),\n"," (3391391, 3390154),\n"," (3394672, 3391391),\n"," (3394975, 3394672),\n"," (3403661, 3394975),\n"," (3407697, 3403661),\n"," (3408389, 3407697),\n"," (3408560, 3408389),\n"," (3408641, 3408560),\n"," (3409081, 3408641),\n"," (3409226, 3409081),\n"," (3414356, 3409226),\n"," (3414493, 3414356),\n"," (3414579, 3414493),\n"," (3415397, 3414579),\n"," (3415517, 3415397),\n"," (3417448, 3415517),\n"," (3461450, 3417448),\n"," (3464440, 3461450),\n"," (3485242, 3464440),\n"," (3488684, 3485242),\n"," (3500094, 3488684),\n"," (3500906, 3500094),\n"," (3501264, 3500906),\n"," (3501472, 3501264),\n"," (3501824, 3501472),\n"," (3502929, 3501824),\n"," (3509294, 3502929),\n"," (3509374, 3509294),\n"," (3516942, 3509374),\n"," (3517421, 3516942),\n"," (3521868, 3517421),\n"," (3523201, 3521868),\n"," (3530839, 3523201),\n"," (3531019, 3530839),\n"," (3533408, 3531019),\n"," (3539760, 3533408),\n"," (3540043, 3539760),\n"," (3540132, 3540043),\n"," (3542830, 3540132),\n"," (3546917, 3542830),\n"," (3551684, 3546917),\n"," (3551823, 3551684),\n"," (3551998, 3551823),\n"," (3553062, 3551998),\n"," (3567732, 3553062),\n"," (3567866, 3567732),\n"," (3568191, 3567866),\n"," (3576886, 3568191),\n"," (3577816, 3576886),\n"," (3578005, 3577816),\n"," (3610834, 3578005),\n"," (3613241, 3610834),\n"," (3614127, 3613241),\n"," (3614294, 3614127),\n"," (3621389, 3614294),\n"," (3621599, 3621389),\n"," (3621679, 3621599),\n"," (3622039, 3621679),\n"," (3626724, 3622039),\n"," (3627047, 3626724),\n"," (3627257, 3627047),\n"," (3627452, 3627257),\n"," (3627615, 3627452),\n"," (3666296, 3627615),\n"," (3666964, 3666296),\n"," (3669241, 3666964),\n"," (3741623, 3669241),\n"," (3741987, 3741623),\n"," (3742245, 3741987),\n"," (3757005, 3742245),\n"," (3757904, 3757005),\n"," (3758035, 3757904),\n"," (3758112, 3758035),\n"," (3758616, 3758112),\n"," (3758719, 3758616),\n"," (3760671, 3758719),\n"," (3762419, 3760671),\n"," (3763234, 3762419),\n"," (3789953, 3763234),\n"," (3790297, 3789953),\n"," (3796253, 3790297),\n"," (3810292, 3796253),\n"," (3811516, 3810292),\n"," (3816649, 3811516),\n"," (3816818, 3816649),\n"," (3816952, 3816818),\n"," (3817135, 3816952),\n"," (3817350, 3817135),\n"," (3821819, 3817350),\n"," (3823814, 3821819),\n"," (3826378, 3823814),\n"," (3829065, 3826378),\n"," (3835781, 3829065),\n"," (3835979, 3835781),\n"," (3836295, 3835979),\n"," (3836403, 3836295),\n"," (3836994, 3836403),\n"," (3837933, 3836994),\n"," (3838060, 3837933),\n"," (3838480, 3838060),\n"," (3838696, 3838480),\n"," (3839156, 3838696),\n"," (3839263, 3839156),\n"," (3839377, 3839263),\n"," (3863505, 3839377),\n"," (3863610, 3863505),\n"," (3867248, 3863610),\n"," (3870554, 3867248),\n"," (3872626, 3870554),\n"," (3882187, 3872626),\n"," (3890857, 3882187),\n"," (3891017, 3890857),\n"," (3893054, 3891017),\n"," (3894063, 3893054),\n"," (3894151, 3894063),\n"," (3894276, 3894151),\n"," (3998639, 3894276),\n"," (4015496, 3998639),\n"," (4024809, 4015496),\n"," (4026873, 4024809),\n"," (4029209, 4026873),\n"," (4041127, 4029209),\n"," (4041782, 4041127),\n"," (4042000, 4041782),\n"," (4042406, 4042000),\n"," (4042721, 4042406),\n"," (4043381, 4042721),\n"," (4043493, 4043381),\n"," (4043662, 4043493),\n"," (4044051, 4043662),\n"," (4044121, 4044051),\n"," (4044654, 4044121),\n"," (4047130, 4044654),\n"," (4047609, 4047130),\n"," (4048966, 4047609),\n"," (4049579, 4048966),\n"," (4049706, 4049579),\n"," (4050134, 4049706),\n"," (4050532, 4050134),\n"," (4051274, 4050532),\n"," (4051370, 4051274),\n"," (4052574, 4051370),\n"," (4052799, 4052574),\n"," (4053187, 4052799),\n"," (4053696, 4053187),\n"," (4053779, 4053696),\n"," (4112307, 4053779),\n"," (4143845, 4112307),\n"," (4144211, 4143845),\n"," (4144600, 4144211),\n"," (4144721, 4144600),\n"," (4144929, 4144721),\n"," (4145739, 4144929),\n"," (4145951, 4145739),\n"," (4146401, 4145951),\n"," (4146722, 4146401),\n"," (4228001, 4146722),\n"," (4229106, 4228001),\n"," (4229261, 4229106),\n"," (4229420, 4229261),\n"," (4229521, 4229420),\n"," (4229885, 4229521),\n"," (4230495, 4229885),\n"," (4230792, 4230495),\n"," (4231789, 4230792),\n"," (4234851, 4231789),\n"," (4238565, 4234851),\n"," (4242454, 4238565),\n"," (4242560, 4242454),\n"," (4254109, 4242560),\n"," (4254232, 4254109),\n"," (4254375, 4254232),\n"," (4254805, 4254375),\n"," (4255045, 4254805),\n"," (4255147, 4255045),\n"," (4259998, 4255147),\n"," (4274383, 4259998),\n"," (4290170, 4274383),\n"," (4290216, 4290170),\n"," (4290336, 4290216),\n"," (4294149, 4290336),\n"," (4294427, 4294149),\n"," (4295366, 4294427),\n"," (4301239, 4295366),\n"," (4301412, 4301239),\n"," (4301580, 4301412),\n"," (4301798, 4301580),\n"," (4310891, 4301798),\n"," (4311025, 4310891),\n"," (4330589, 4311025),\n"," (4334084, 4330589),\n"," (4342463, 4334084),\n"," (4342836, 4342463),\n"," (4343474, 4342836),\n"," (4344266, 4343474),\n"," (4345511, 4344266),\n"," (4346110, 4345511),\n"," (4347028, 4346110),\n"," (4350585, 4347028),\n"," (4350736, 4350585),\n"," (4351316, 4350736),\n"," (4362718, 4351316),\n"," (4362899, 4362718),\n"," (4363136, 4362899),\n"," (4366735, 4363136),\n"," (4366981, 4366735),\n"," (4367351, 4366981),\n"," (4368879, 4367351),\n"," (4370975, 4368879),\n"," (4396076, 4370975),\n"," (4396646, 4396076),\n"," (4397112, 4396646),\n"," (4397270, 4397112),\n"," (4397728, 4397270),\n"," (4398114, 4397728),\n"," (4399602, 4398114),\n"," (4400155, 4399602),\n"," (4411232, 4400155),\n"," (4411362, 4411232),\n"," (4411936, 4411362),\n"," (4431288, 4411936),\n"," (4431584, 4431288),\n"," (4431798, 4431584),\n"," (4432054, 4431798),\n"," (4432880, 4432054),\n"," (4433016, 4432880),\n"," (4433653, 4433016),\n"," (4433767, 4433653),\n"," (4433905, 4433767),\n"," (4435326, 4433905),\n"," (4467018, 4435326),\n"," (4468250, 4467018),\n"," (4468353, 4468250),\n"," (4468550, 4468353),\n"," (4468737, 4468550),\n"," (4469177, 4468737),\n"," (4469270, 4469177),\n"," (4469729, 4469270),\n"," (4471401, 4469729),\n"," (4472534, 4471401),\n"," (4472617, 4472534),\n"," (4477154, 4472617),\n"," (4477250, 4477154),\n"," (4477713, 4477250),\n"," (4586320, 4477713),\n"," (4586562, 4586320),\n"," (4586672, 4586562),\n"," (4589587, 4586672),\n"," (4589946, 4589587),\n"," (4590234, 4589946),\n"," (4590877, 4590234),\n"," (4591658, 4590877),\n"," (4596503, 4591658),\n"," (4598971, 4596503),\n"," (4629565, 4598971),\n"," (4641922, 4629565),\n"," (4643149, 4641922),\n"," (4643339, 4643149),\n"," (4654517, 4643339),\n"," (4655109, 4654517),\n"," (4655710, 4655109),\n"," (4655819, 4655710),\n"," (4656018, 4655819),\n"," (4656165, 4656018),\n"," (4657022, 4656165),\n"," (4661923, 4657022),\n"," (4672962, 4661923),\n"," (4673301, 4672962),\n"," (4673438, 4673301),\n"," (4673978, 4673438),\n"," (4674301, 4673978),\n"," (4674470, 4674301),\n"," (4674593, 4674470),\n"," (4674637, 4674593),\n"," (4675080, 4674637),\n"," (4675193, 4675080),\n"," (4682768, 4675193),\n"," (4693603, 4682768),\n"," (4693717, 4693603),\n"," (4694503, 4693717),\n"," (4694707, 4694503),\n"," (4694821, 4694707),\n"," (4694915, 4694821),\n"," (4695645, 4694915),\n"," (4695755, 4695645),\n"," (4695973, 4695755),\n"," (4696317, 4695973),\n"," (4697226, 4696317),\n"," (4697865, 4697226),\n"," (4699675, 4697865),\n"," (4699829, 4699675),\n"," (4700093, 4699829),\n"," (4701460, 4700093),\n"," (4702187, 4701460),\n"," (4702357, 4702187),\n"," (4726049, 4702357),\n"," (4726230, 4726049),\n"," (4726392, 4726230),\n"," (4744857, 4726392),\n"," (4745019, 4744857),\n"," (4748274, 4745019),\n"," (4750028, 4748274),\n"," (4750118, 4750028),\n"," (4750232, 4750118),\n"," (4750374, 4750232),\n"," (4751401, 4750374),\n"," (4751538, 4751401),\n"," (4753215, 4751538),\n"," (4753307, 4753215),\n"," (4753640, 4753307),\n"," (4756051, 4753640),\n"," (4763052, 4756051),\n"," (4771142, 4763052),\n"," (4771407, 4771142),\n"," (4774445, 4771407),\n"," (4775061, 4774445),\n"," (4775326, 4775061),\n"," (4775521, 4775326),\n"," (4776594, 4775521),\n"," (4778965, 4776594),\n"," (4800250, 4778965),\n"," (4837561, 4800250),\n"," (4840438, 4837561),\n"," (4840763, 4840438),\n"," (4840960, 4840763),\n"," (4841827, 4840960),\n"," (4841935, 4841827),\n"," (4842068, 4841935),\n"," (4842272, 4842068),\n"," (4845410, 4842272),\n"," (4845639, 4845410),\n"," (4845865, 4845639),\n"," (4846492, 4845865),\n"," (4846623, 4846492),\n"," (4846790, 4846623),\n"," (4848867, 4846790),\n"," (4851123, 4848867),\n"," (4851252, 4851123),\n"," (4852480, 4851252),\n"," (4852795, 4852480),\n"," (4854359, 4852795),\n"," (4854857, 4854359),\n"," (4856571, 4854857),\n"," (4946571, 4856571),\n"," (4950210, 4946571),\n"," (4950306, 4950210),\n"," (4952146, 4950306),\n"," (4970445, 4952146),\n"," (4973404, 4970445),\n"," (4973764, 4973404),\n"," (4979975, 4973764),\n"," (4983313, 4979975),\n"," (4996567, 4983313),\n"," (4996672, 4996567),\n"," (5008531, 4996672),\n"," (5008834, 5008531),\n"," (5009281, 5008834),\n"," (5010438, 5009281),\n"," (5011199, 5010438),\n"," ...]"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df_nan.iloc[-1, 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xlXF7cc8RgT6","executionInfo":{"status":"ok","timestamp":1646624558219,"user_tz":480,"elapsed":245,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"31d2e916-bc27-4a76-a38f-df4d43ebd257"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["24057834"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":[""],"metadata":{"id":"2LNE0-GhKx7k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# remove those Movie ID rows\n","df = df[pd.notnull(df['Rating'])]\n","\n","df['Movie_Id'] = movie_np.astype(int)\n","df['Cust_Id'] = df['Cust_Id'].astype(int)\n","print('-Dataset examples-')\n","print(df.iloc[::5000000, :])"],"metadata":{"id":"3iIzP-6ju36f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646624563173,"user_tz":480,"elapsed":3445,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"2aa5c4f0-f131-4212-dfd4-76f93bc2efd6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-Dataset examples-\n","          Cust_Id  Rating  Movie_Id\n","1         1488844     3.0         1\n","5000996    501954     2.0       996\n","10001962   404654     5.0      1962\n","15002876   886608     2.0      2876\n","20003825  1193835     2.0      3825\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"lKhBtYisTKNz","executionInfo":{"status":"ok","timestamp":1646624584237,"user_tz":480,"elapsed":218,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"9956755c-a9f8-4888-afba-e3dc2e858623"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-76dcb3cf-9aaa-4ab1-8842-c3f569f371c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cust_Id</th>\n","      <th>Rating</th>\n","      <th>Movie_Id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1488844</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>822109</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>885013</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30878</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>823519</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24058258</th>\n","      <td>2591364</td>\n","      <td>2.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058259</th>\n","      <td>1791000</td>\n","      <td>2.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058260</th>\n","      <td>512536</td>\n","      <td>5.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058261</th>\n","      <td>988963</td>\n","      <td>3.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058262</th>\n","      <td>1704416</td>\n","      <td>3.0</td>\n","      <td>4499</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>24053764 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76dcb3cf-9aaa-4ab1-8842-c3f569f371c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-76dcb3cf-9aaa-4ab1-8842-c3f569f371c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-76dcb3cf-9aaa-4ab1-8842-c3f569f371c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["          Cust_Id  Rating  Movie_Id\n","1         1488844     3.0         1\n","2          822109     5.0         1\n","3          885013     4.0         1\n","4           30878     4.0         1\n","5          823519     3.0         1\n","...           ...     ...       ...\n","24058258  2591364     2.0      4499\n","24058259  1791000     2.0      4499\n","24058260   512536     5.0      4499\n","24058261   988963     3.0      4499\n","24058262  1704416     3.0      4499\n","\n","[24053764 rows x 3 columns]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# binarize the data (only keep ratings >= 4)\n","df = df[df['Rating'] > 3.5]\n"],"metadata":{"id":"roI9wfktu389"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"31xqevzSTZgJ","executionInfo":{"status":"ok","timestamp":1646624588432,"user_tz":480,"elapsed":15,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"796afd8e-c4b3-4d95-d6a1-499ccbef89b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-69ea11cb-583d-4549-a73c-9c423114a19f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cust_Id</th>\n","      <th>Rating</th>\n","      <th>Movie_Id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>822109</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>885013</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30878</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>124105</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1842128</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24058249</th>\n","      <td>2092745</td>\n","      <td>5.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058250</th>\n","      <td>555962</td>\n","      <td>5.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058253</th>\n","      <td>272857</td>\n","      <td>4.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058257</th>\n","      <td>2562830</td>\n","      <td>4.0</td>\n","      <td>4499</td>\n","    </tr>\n","    <tr>\n","      <th>24058260</th>\n","      <td>512536</td>\n","      <td>5.0</td>\n","      <td>4499</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>13592324 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69ea11cb-583d-4549-a73c-9c423114a19f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-69ea11cb-583d-4549-a73c-9c423114a19f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-69ea11cb-583d-4549-a73c-9c423114a19f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["          Cust_Id  Rating  Movie_Id\n","2          822109     5.0         1\n","3          885013     4.0         1\n","4           30878     4.0         1\n","7          124105     4.0         1\n","9         1842128     4.0         1\n","...           ...     ...       ...\n","24058249  2092745     5.0      4499\n","24058250   555962     5.0      4499\n","24058253   272857     4.0      4499\n","24058257  2562830     4.0      4499\n","24058260   512536     5.0      4499\n","\n","[13592324 rows x 3 columns]"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df = df[['Cust_Id', 'Movie_Id', 'Rating']]\n","df.columns = ['userId', 'movieId', 'rating']\n","df.head()"],"metadata":{"id":"WsFxERZju3_P","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1646624591390,"user_tz":480,"elapsed":302,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"56bafca0-802a-4f06-b1af-ceaeac8c72aa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-8541cd86-b3a9-4794-84a8-35e3bc37b37e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>822109</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>885013</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30878</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>124105</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1842128</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8541cd86-b3a9-4794-84a8-35e3bc37b37e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8541cd86-b3a9-4794-84a8-35e3bc37b37e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8541cd86-b3a9-4794-84a8-35e3bc37b37e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["    userId  movieId  rating\n","2   822109        1     5.0\n","3   885013        1     4.0\n","4    30878        1     4.0\n","7   124105        1     4.0\n","9  1842128        1     4.0"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["raw_data = df\n","raw_data.head()"],"metadata":{"id":"z2mNQe47u4Bk","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1646624593363,"user_tz":480,"elapsed":264,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"546ab281-2ed2-42d0-a0b8-7622e96aa422"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ec3eb0c9-6814-49df-b984-d4be396b6795\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>822109</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>885013</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30878</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>124105</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1842128</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec3eb0c9-6814-49df-b984-d4be396b6795')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ec3eb0c9-6814-49df-b984-d4be396b6795 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ec3eb0c9-6814-49df-b984-d4be396b6795');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["    userId  movieId  rating\n","2   822109        1     5.0\n","3   885013        1     4.0\n","4    30878        1     4.0\n","7   124105        1     4.0\n","9  1842128        1     4.0"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["def get_count(tp, id):\n","    playcount_groupbyid = tp[[id]].groupby(id, as_index=False)\n","    count = playcount_groupbyid.size()\n","    return count"],"metadata":{"id":"aDPTk2Lkuv2q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def filter_triplets(tp, min_uc=5, min_sc=0):\n","    # Only keep the triplets for items which were clicked on by at least min_sc users. \n","    if min_sc > 0:\n","        itemcount = get_count(tp, 'movieId')\n","        tp = tp[tp['movieId'].isin(itemcount.index[itemcount['size'] >= min_sc])]\n","    \n","    # Only keep the triplets for users who clicked on at least min_uc items\n","    # After doing this, some of the items will have less than min_uc users, but should only be a small proportion\n","    if min_uc > 0:\n","        usercount = get_count(tp, 'userId')\n","        tp = tp[tp['userId'].isin(usercount.index[usercount['size'] >= min_uc])]\n","    \n","    # Update both usercount and itemcount after filtering\n","    usercount, itemcount = get_count(tp, 'userId'), get_count(tp, 'movieId') \n","    return tp, usercount, itemcount"],"metadata":{"id":"1e41a7lIuv4_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["raw_data, user_activity, item_popularity = filter_triplets(raw_data, min_uc=5, min_sc=0)\n","user_activity"],"metadata":{"id":"-kWS2Vr2vPwz","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1646624600311,"user_tz":480,"elapsed":1605,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"77d16952-1740-41db-df9d-6c11e64f1b97"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-035883a9-b2c4-4c08-b721-41f6dac5b7b3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7</td>\n","      <td>142</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>79</td>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>62636</th>\n","      <td>458412</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>62637</th>\n","      <td>458414</td>\n","      <td>111</td>\n","    </tr>\n","    <tr>\n","      <th>62638</th>\n","      <td>458417</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>62639</th>\n","      <td>458422</td>\n","      <td>115</td>\n","    </tr>\n","    <tr>\n","      <th>62640</th>\n","      <td>458435</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>62641 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-035883a9-b2c4-4c08-b721-41f6dac5b7b3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-035883a9-b2c4-4c08-b721-41f6dac5b7b3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-035883a9-b2c4-4c08-b721-41f6dac5b7b3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       userId  size\n","0           6    61\n","1           7   142\n","2           8    17\n","3          10    23\n","4          79   108\n","...       ...   ...\n","62636  458412    54\n","62637  458414   111\n","62638  458417    75\n","62639  458422   115\n","62640  458435    25\n","\n","[62641 rows x 2 columns]"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["item_popularity"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"fuRfdBZ6UnEx","executionInfo":{"status":"ok","timestamp":1646624602576,"user_tz":480,"elapsed":234,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"4f9f1c16-34a1-4e69-ea13-b67fbbfc0a2c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-aad9f775-ddc9-419b-a31e-9acae1e39e53\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movieId</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>173</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>107</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4418</th>\n","      <td>4495</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>4419</th>\n","      <td>4496</td>\n","      <td>806</td>\n","    </tr>\n","    <tr>\n","      <th>4420</th>\n","      <td>4497</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4421</th>\n","      <td>4498</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4422</th>\n","      <td>4499</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4423 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aad9f775-ddc9-419b-a31e-9acae1e39e53')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aad9f775-ddc9-419b-a31e-9acae1e39e53 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aad9f775-ddc9-419b-a31e-9acae1e39e53');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      movieId  size\n","0           1    52\n","1           2    15\n","2           3   173\n","3           4     7\n","4           5   107\n","...       ...   ...\n","4418     4495    51\n","4419     4496   806\n","4420     4497    13\n","4421     4498     4\n","4422     4499    12\n","\n","[4423 rows x 2 columns]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["raw_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"g-PnP610UpqL","executionInfo":{"status":"ok","timestamp":1646624604835,"user_tz":480,"elapsed":9,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"575e92c4-ad7d-4ba7-dc76-d974d9f329f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-0b1bd5cf-692d-4bb3-b893-45330b7fd015\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>30878</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>124105</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>372233</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>427928</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>337541</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24058053</th>\n","      <td>73944</td>\n","      <td>4499</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>24058073</th>\n","      <td>295393</td>\n","      <td>4499</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>24058229</th>\n","      <td>101554</td>\n","      <td>4499</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>24058248</th>\n","      <td>441248</td>\n","      <td>4499</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>24058253</th>\n","      <td>272857</td>\n","      <td>4499</td>\n","      <td>4.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1851657 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b1bd5cf-692d-4bb3-b893-45330b7fd015')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b1bd5cf-692d-4bb3-b893-45330b7fd015 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b1bd5cf-692d-4bb3-b893-45330b7fd015');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["          userId  movieId  rating\n","4          30878        1     4.0\n","7         124105        1     4.0\n","20        372233        1     5.0\n","27        427928        1     4.0\n","31        337541        1     5.0\n","...          ...      ...     ...\n","24058053   73944     4499     5.0\n","24058073  295393     4499     5.0\n","24058229  101554     4499     4.0\n","24058248  441248     4499     4.0\n","24058253  272857     4499     4.0\n","\n","[1851657 rows x 3 columns]"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["sparsity = 1. * raw_data.shape[0] / (user_activity.shape[0] * item_popularity.shape[0])\n","\n","print(\"After filtering, there are %d watching events from %d users and %d movies (sparsity: %.3f%%)\" % \n","      (raw_data.shape[0], user_activity.shape[0], item_popularity.shape[0], sparsity * 100))"],"metadata":{"id":"KbDMwt5PvPzJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646624608080,"user_tz":480,"elapsed":243,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"f926b983-5285-4192-be59-0a87468ced20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["After filtering, there are 1851657 watching events from 62641 users and 4423 movies (sparsity: 0.668%)\n"]}]},{"cell_type":"code","source":["unique_uid = user_activity.index\n","\n","np.random.seed(98765)\n","idx_perm = np.random.permutation(unique_uid.size)\n","unique_uid = unique_uid[idx_perm]"],"metadata":{"id":"wadu1L7XvP1M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# create train/validation/test users\n","n_users = unique_uid.size\n","n_heldout_users = 40000\n","\n","#tr_users = unique_uid[:(n_users - n_heldout_users * 2)]\n","# Take top 10k users\n","less_users = 10000\n","tr_users = unique_uid[:10000]\n","print(tr_users)\n","\n","vd_users = unique_uid[(n_users - n_heldout_users * 2): (n_users - n_heldout_users)]\n","te_users = unique_uid[(n_users - n_heldout_users):]"],"metadata":{"id":"tYiI5ibbvP3l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646624615300,"user_tz":480,"elapsed":522,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"1751abc8-7267-488d-98fd-bc4488540eae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Int64Index([46611, 28404, 25066, 30772, 12196, 19955, 21746, 31918, 28719,\n","            16626,\n","            ...\n","             3482, 56951, 35208, 17011,  9129, 50742, 61503, 14301, 34788,\n","            47626],\n","           dtype='int64', length=10000)\n"]}]},{"cell_type":"code","source":["train_plays = raw_data.loc[raw_data['userId'].isin(tr_users)]\n"],"metadata":{"id":"0m5sAIBMvP5x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["unique_sid = pd.unique(train_plays['movieId'])\n"],"metadata":{"id":"BaFWU7dEvP8C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["show2id = dict((sid, i) for (i, sid) in enumerate(unique_sid))\n","profile2id = dict((pid, i) for (i, pid) in enumerate(unique_uid))"],"metadata":{"id":"huTC0o3OvP-X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def split_train_test_proportion(data, test_prop=0.2):\n","    data_grouped_by_user = data.groupby('userId')\n","    tr_list, te_list = list(), list()\n","\n","    np.random.seed(98765)\n","\n","    for i, (_, group) in enumerate(data_grouped_by_user):\n","        n_items_u = len(group)\n","\n","        if n_items_u >= 5:\n","            idx = np.zeros(n_items_u, dtype='bool')\n","            idx[np.random.choice(n_items_u, size=int(test_prop * n_items_u), replace=False).astype('int64')] = True\n","\n","            tr_list.append(group[np.logical_not(idx)])\n","            te_list.append(group[idx])\n","        else:\n","            tr_list.append(group)\n","\n","        if i % 1000 == 0:\n","            print(\"%d users sampled\" % i)\n","            sys.stdout.flush()\n","\n","    data_tr = pd.concat(tr_list)\n","    data_te = pd.concat(te_list)\n","    \n","    return data_tr, data_te"],"metadata":{"id":"QuLQLgbWuv6y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vad_plays = raw_data.loc[raw_data['userId'].isin(vd_users)]\n","vad_plays = vad_plays.loc[vad_plays['movieId'].isin(unique_sid)]\n"],"metadata":{"id":"pTQo4oW3vddo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vad_plays_tr, vad_plays_te = split_train_test_proportion(vad_plays)\n"],"metadata":{"id":"fxOjquP1vdfs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_plays = raw_data.loc[raw_data['userId'].isin(te_users)]\n","test_plays = test_plays.loc[test_plays['movieId'].isin(unique_sid)]"],"metadata":{"id":"iO0eTeP1vdiG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_plays_tr, test_plays_te = split_train_test_proportion(test_plays)\n"],"metadata":{"id":"q_r1cxoRvdkZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pro_dir = \"./\"\n","\n","if not os.path.exists(pro_dir):\n","    os.makedirs(pro_dir)\n","\n","with open(os.path.join(pro_dir, 'unique_sid.txt'), 'w') as f:\n","    for sid in unique_sid:\n","        f.write('%s\\n' % sid)"],"metadata":{"id":"zebYON0Avdm6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def numerize(tp):\n","    uid = list(map(lambda x: profile2id[x], tp['userId']))\n","    sid = list(map(lambda x: show2id[x], tp['movieId']))\n","    return pd.DataFrame(data={'uid': uid, 'sid': sid}, columns=['uid', 'sid'])"],"metadata":{"id":"wgsk2YE0vdpK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data = numerize(train_plays)\n","train_data.to_csv(os.path.join(pro_dir, 'train.csv'), index=False)"],"metadata":{"id":"_Xgq7jgEVTE7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vad_data_tr = numerize(vad_plays_tr)\n","vad_data_tr.to_csv(os.path.join(pro_dir, 'validation_tr.csv'), index=False)"],"metadata":{"id":"hmfgi8vnvdt3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vad_data_te = numerize(vad_plays_te)\n","vad_data_te.to_csv(os.path.join(pro_dir, 'validation_te.csv'), index=False)"],"metadata":{"id":"3hOgQfz5vdwP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data_tr = numerize(test_plays_tr)\n","test_data_tr.to_csv(os.path.join(pro_dir, 'test_tr.csv'), index=False)"],"metadata":{"id":"47-Y8w8Guv8-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data_te = numerize(test_plays_te)\n","test_data_te.to_csv(os.path.join(pro_dir, 'test_te.csv'), index=False)"],"metadata":{"id":"TRMe_RPZvsgH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"KpxxJiL3VXY9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"OSMpQ7B0VXbT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# create train/validation/test users\n","#tr_users = unique_uid"],"metadata":{"id":"jH99jlq9VXdc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_plays = raw_data.loc[raw_data['userId'].isin(tr_users)]\n","unique_sid = pd.unique(train_plays['movieId'])\n","print(train_plays)\n"],"metadata":{"id":"y4GgXxX_VjiG","executionInfo":{"status":"ok","timestamp":1646624676816,"user_tz":480,"elapsed":221,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0bdc2907-cbd8-417c-e34b-9bc8fbea74de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          userId  movieId  rating\n","319        31913        1     4.0\n","1621       25049        3     4.0\n","2640        3718        3     4.0\n","2675       46222        3     4.0\n","3429        3321        5     4.0\n","...          ...      ...     ...\n","24055067   47300     4496     4.0\n","24056515   33638     4496     4.0\n","24056520    3718     4496     4.0\n","24057150     906     4497     4.0\n","24057863    8158     4499     4.0\n","\n","[39465 rows x 3 columns]\n"]}]},{"cell_type":"code","source":["def split_train_test_proportion(data, test_prop=0.2):\n","    data_grouped_by_user = data.groupby('userId')\n","    tr_list, te_list = list(), list()\n","\n","    np.random.seed(98765)\n","\n","    for i, (_, group) in enumerate(data_grouped_by_user):\n","        n_items_u = len(group)\n","\n","        if n_items_u >= 5:\n","            idx = np.zeros(n_items_u, dtype='bool')\n","            idx[np.random.choice(n_items_u, size=int(test_prop * n_items_u), replace=False).astype('int64')] = True\n","\n","            tr_list.append(group[np.logical_not(idx)])\n","            te_list.append(group[idx])\n","        else:\n","            tr_list.append(group)\n","\n","        if i % 1000 == 0:\n","            print(\"%d users sampled\" % i)\n","            sys.stdout.flush()\n","\n","    data_tr = pd.concat(tr_list)\n","    data_te = pd.concat(te_list)\n","    \n","    return data_tr, data_te"],"metadata":{"id":"BZcKHjIoVrTt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["show2id = dict((sid, i) for (i, sid) in enumerate(unique_sid))\n","profile2id = dict((pid, i) for (i, pid) in enumerate(unique_uid))"],"metadata":{"id":"rGrhNytyVrlb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_plays_tr, train_plays_te = split_train_test_proportion(train_plays)\n","print(train_plays_tr)\n","print(train_plays_te)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZtehDy7wWB_E","executionInfo":{"status":"ok","timestamp":1646624683255,"user_tz":480,"elapsed":820,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"bc4dd7e0-e7ba-4119-9717-d7556128975c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0 users sampled\n","1000 users sampled\n","          userId  movieId  rating\n","1368727        6      295     4.0\n","1723707        6      329     4.0\n","2462409        6      457     5.0\n","3005956        6      564     4.0\n","4564709        6      886     5.0\n","...          ...      ...     ...\n","20553015   62579     3900     5.0\n","21524541   62579     4043     4.0\n","22122173   62579     4162     4.0\n","22629611   62579     4284     5.0\n","23641097   62579     4427     5.0\n","\n","[32109 rows x 3 columns]\n","          userId  movieId  rating\n","576896         6      173     4.0\n","649807         6      175     5.0\n","2886520        6      528     4.0\n","9663523        6     1901     4.0\n","10103658       6     1962     4.0\n","...          ...      ...     ...\n","8839248    62546     1754     5.0\n","12503899   62546     2391     4.0\n","3116420    62579      571     4.0\n","4550113    62579      886     4.0\n","17259598   62579     3320     5.0\n","\n","[7356 rows x 3 columns]\n"]}]},{"cell_type":"code","source":["pro_dir = \"./\"\n","\n","if not os.path.exists(pro_dir):\n","    os.makedirs(pro_dir)\n","\n","with open(os.path.join(pro_dir, 'unique_sid.txt'), 'w') as f:\n","    for sid in unique_sid:\n","        f.write('%s\\n' % sid)"],"metadata":{"id":"M5c81n5dWCGo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def numerize(tp):\n","    uid = list(map(lambda x: profile2id[x], tp['userId']))\n","    sid = list(map(lambda x: show2id[x], tp['movieId']))\n","    return pd.DataFrame(data={'uid': uid, 'sid': sid}, columns=['uid', 'sid'])"],"metadata":{"id":"qGzduNNwVo8-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_te = numerize(train_plays_te)\n","train_data_te.to_csv(os.path.join(pro_dir, 'train_te_10k.csv'), index=False)"],"metadata":{"id":"HDaYx0tfVXfw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_tr = numerize(train_plays_tr)\n","train_data_tr.to_csv(os.path.join(pro_dir, 'train_tr_10k.csv'), index=False)"],"metadata":{"id":"pY5oCPHMVXh4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data_tr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":673},"id":"TCtxZWdBWdC1","executionInfo":{"status":"ok","timestamp":1646624769504,"user_tz":480,"elapsed":281,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"953e5e5f-0b7a-4ecc-e88b-44bcf82a5e1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-e7bafae9-0852-4415-ad59-cdf7cec56f61\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>uid</th>\n","      <th>sid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8804</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8804</td>\n","      <td>166</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8804</td>\n","      <td>242</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8804</td>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8804</td>\n","      <td>469</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>32104</th>\n","      <td>8956</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>32105</th>\n","      <td>8956</td>\n","      <td>2074</td>\n","    </tr>\n","    <tr>\n","      <th>32106</th>\n","      <td>8956</td>\n","      <td>2133</td>\n","    </tr>\n","    <tr>\n","      <th>32107</th>\n","      <td>8956</td>\n","      <td>2197</td>\n","    </tr>\n","    <tr>\n","      <th>32108</th>\n","      <td>8956</td>\n","      <td>2281</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>32109 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7bafae9-0852-4415-ad59-cdf7cec56f61')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e7bafae9-0852-4415-ad59-cdf7cec56f61 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e7bafae9-0852-4415-ad59-cdf7cec56f61');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["        uid   sid\n","0      8804   150\n","1      8804   166\n","2      8804   242\n","3      8804   300\n","4      8804   469\n","...     ...   ...\n","32104  8956  1995\n","32105  8956  2074\n","32106  8956  2133\n","32107  8956  2197\n","32108  8956  2281\n","\n","[32109 rows x 2 columns]"]},"metadata":{},"execution_count":35},{"output_type":"stream","name":"stdout","text":["Warning: total number of rows (32109) exceeds max_rows (20000). Limiting to first (20000) rows.\n"]}]},{"cell_type":"code","source":["user_activity.to_csv(os.path.join(pro_dir, 'user_activity.csv'), index=False)\n","user_activity"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"kEeQHIShWO1d","executionInfo":{"status":"ok","timestamp":1646624773614,"user_tz":480,"elapsed":841,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"3ac83eda-a0f3-4634-c67f-ebdcbd9a9d37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ab6f1322-1939-4786-833f-fa1ea137584d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7</td>\n","      <td>142</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>79</td>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>62636</th>\n","      <td>458412</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>62637</th>\n","      <td>458414</td>\n","      <td>111</td>\n","    </tr>\n","    <tr>\n","      <th>62638</th>\n","      <td>458417</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>62639</th>\n","      <td>458422</td>\n","      <td>115</td>\n","    </tr>\n","    <tr>\n","      <th>62640</th>\n","      <td>458435</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>62641 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab6f1322-1939-4786-833f-fa1ea137584d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ab6f1322-1939-4786-833f-fa1ea137584d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ab6f1322-1939-4786-833f-fa1ea137584d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       userId  size\n","0           6    61\n","1           7   142\n","2           8    17\n","3          10    23\n","4          79   108\n","...       ...   ...\n","62636  458412    54\n","62637  458414   111\n","62638  458417    75\n","62639  458422   115\n","62640  458435    25\n","\n","[62641 rows x 2 columns]"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["item_popularity.to_csv(os.path.join(pro_dir, 'item_popularity.csv'), index=False)\n","item_popularity"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"0rhnTLxKWSBg","executionInfo":{"status":"ok","timestamp":1646624776998,"user_tz":480,"elapsed":839,"user":{"displayName":"GAUTAM DUDEJA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09054366674602120884"}},"outputId":"3eb158f1-ced6-46aa-da8f-1fdfcbfef135"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-0ec984e3-aea0-410a-a05b-5fed9f678faf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movieId</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>173</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>107</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4418</th>\n","      <td>4495</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>4419</th>\n","      <td>4496</td>\n","      <td>806</td>\n","    </tr>\n","    <tr>\n","      <th>4420</th>\n","      <td>4497</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4421</th>\n","      <td>4498</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4422</th>\n","      <td>4499</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4423 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ec984e3-aea0-410a-a05b-5fed9f678faf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ec984e3-aea0-410a-a05b-5fed9f678faf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ec984e3-aea0-410a-a05b-5fed9f678faf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      movieId  size\n","0           1    52\n","1           2    15\n","2           3   173\n","3           4     7\n","4           5   107\n","...       ...   ...\n","4418     4495    51\n","4419     4496   806\n","4420     4497    13\n","4421     4498     4\n","4422     4499    12\n","\n","[4423 rows x 2 columns]"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":[""],"metadata":{"id":"7EX09-7FWTH-"},"execution_count":null,"outputs":[]}]}